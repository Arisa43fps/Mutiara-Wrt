name: Build OpenWRT Image

on:
  workflow_dispatch:

jobs:
  make_rootfs:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        sudo apt update -y > /dev/null 2>&1
        sudo apt install net-tools make gawk git curl unzip bzip2 -y > /dev/null 2>&1
        sudo apt install -y $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt) > /dev/null 2>&1

    - name: Download OpenWRT Image Builder
      run: |
        wget https://downloads.openwrt.org/releases/23.05.5/targets/armsr/armv8/openwrt-imagebuilder-23.05.5-armsr-armv8.Linux-x86_64.tar.xz > /dev/null 2>&1
        tar -J -x -f openwrt-imagebuilder-23.05.5-armsr-armv8.Linux-x86_64.tar.xz > /dev/null 2>&1

    - name: Build OpenWRT Image
      run: |
        cd openwrt-imagebuilder-23.05.5-armsr-armv8.Linux-x86_64 > /dev/null 2>&1
        make image PROFILE="generic" PACKAGES=" \
        -dnsmasq -luci-theme-bootstrap \
        dnsmasq-full cgi-io libiwinfo libiwinfo-data libiwinfo-lua liblua liblucihttp liblucihttp-lua \
        libubus-lua lua luci luci-app-firewall luci-app-opkg luci-base luci-lib-base \
        luci-lib-ip luci-lib-jsonc luci-lib-nixio luci-mod-admin-full luci-mod-network \
        luci-mod-status luci-mod-system luci-proto-ipv6 luci-proto-ppp luci-ssl \
        luci-theme-material rpcd rpcd-mod-file rpcd-mod-iwinfo rpcd-mod-luci \
        rpcd-mod-rrdns uhttpd uhttpd-mod-ubus luci-compat \
        ath9k-htc-firmware btrfs-progs hostapd hostapd-utils kmod-ath kmod-ath9k kmod-ath9k-common \
        kmod-ath9k-htc kmod-cfg80211 kmod-crypto-acompress kmod-crypto-crc32c kmod-crypto-hash \
        kmod-fs-btrfs kmod-mac80211 wireless-tools wpa-cli wpa-supplicant libc \
        php8 php8-cgi php8-mod-session php8-mod-ctype php8-mod-fileinfo php8-mod-zip php8-mod-iconv php8-mod-mbstring \
        zoneinfo-core zoneinfo-asia nano htop unzip wget wget-ssl libmbedtls tar bash  \
        netdata httping coreutils-timeout kmod-usb-net-rndis iperf3 \
        usbutils kmod-usb-net-cdc-ether usb-modeswitch openssh-sftp-server kmod-usb2 \
        kmod-usb-net-huawei-cdc-ncm kmod-usb-serial-wwan \
        perlbase-file kmod-brcmutil perlbase-essential perlbase-utf8 \
        perlbase-file  perlbase-time perlbase-xsloader coreutils-stat luci-app-ttyd \
        " FILES="files" > /dev/null 2>&1 || true

    - name: Upload Firmware
      uses: actions/upload-artifact@v3
      with:
        name: openwrt-firmware
        path: openwrt-imagebuilder-23.05.5-armsr-armv8.Linux-x86_64/bin/targets/armsr/armv8/openwrt-23.05.5-armsr-armv8-generic-rootfs.tar.gz

  build_firmware:
    runs-on: ubuntu-22.04
    needs: make_rootfs
    steps:
    - name: Download Firmware Artifact
      uses: actions/download-artifact@v3
      with:
        name: openwrt-firmware

    - name: Clone Amlogic Repository
      run: |
        git clone --depth 1 https://github.com/ophub/amlogic-s9xxx-openwrt.git
        cd amlogic-s9xxx-openwrt
        mkdir -p openwrt-armvirt

    - name: Move Firmware
      run: |
        mv openwrt-23.05.5-armsr-armv8-generic-rootfs.tar.gz amlogic-s9xxx-openwrt/openwrt-armvirt/

    - name: Build Amlogic Firmware
      run: |
        cd amlogic-s9xxx-openwrt
        sudo ./remake -b s905x -k 5.15 -s 1024

    - name: Find IMG File
      if: env.skip_build == 'false'
      run: |
        IMG_PATH=$(find -name "openwrt*.img")
        echo "IMG_PATH=$IMG_PATH" >> $GITHUB_ENV

    - name: Create Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      with:
        name: Amlogic Firmware Release
        tag_name: v1.0.0
        draft: false
        prerelease: false
        files: |
              ${{ env.IMG_PATH }}
        body: |
              Build Complete
